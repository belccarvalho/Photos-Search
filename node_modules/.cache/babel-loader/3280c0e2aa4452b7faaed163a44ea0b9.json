{"ast":null,"code":"import _toConsumableArray from\"/home/dci/Documents/React/PicPhotos/photos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/dci/Documents/React/PicPhotos/photos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//when we create a Hook, it usually starts with \"use\"\n//we don't read anything in Hook\nimport{useState,useEffect}from\"react\";import axios from\"axios\";export default function usePhotoSearch(query,pageNumber,searchOn){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),photos=_useState2[0],setPhotos=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),hasMore=_useState4[0],setHasMore=_useState4[1];//this useEffect function will reset the photos and delete the last search and start another one, otherwise it would add the phots from new search after the ones from the last research\nuseEffect(function(){setPhotos([]);},[query]);//useEffect is used to run a function just when a condition is attended\nuseEffect(function(){axios.get(\"https://api.unsplash.com/search/collections/?client_id=j9bQjfT_YyUFBte48Ewb8Q58-tYlHNiThtbzHJ8Y6oE&query=\".concat(query,\"&page=\").concat(pageNumber)).then(function(res){setPhotos([].concat(_toConsumableArray(photos),_toConsumableArray(res.data.results)));//if the condition inside of parentheses is true, it will change the value of hasMore to true\nsetHasMore(res.data.total_pages>pageNumber);}).catch(function(err){console.log(err);});//ehen the variable inde [] changes -> the function below will run\n},[pageNumber,searchOn]);return[photos,hasMore];}","map":{"version":3,"sources":["/home/dci/Documents/React/PicPhotos/photos/src/components/usePhotoSearch.jsx"],"names":["useState","useEffect","axios","usePhotoSearch","query","pageNumber","searchOn","photos","setPhotos","hasMore","setHasMore","get","then","res","data","results","total_pages","catch","err","console","log"],"mappings":"0UAAA;AACA;AAEA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+BC,UAA/B,CAA2CC,QAA3C,CAAqD,eACtCN,QAAQ,CAAC,EAAD,CAD8B,wCAC3DO,MAD2D,eACnDC,SADmD,8BAEpCR,QAAQ,CAAC,KAAD,CAF4B,yCAE3DS,OAF2D,eAElDC,UAFkD,eAIlE;AAEAT,SAAS,CAAC,UAAM,CACdO,SAAS,CAAC,EAAD,CAAT,CACD,CAFQ,CAEN,CAACJ,KAAD,CAFM,CAAT,CAGA;AACAH,SAAS,CAAC,UAAM,CACdC,KAAK,CACFS,GADH,oHAEgHP,KAFhH,kBAE8HC,UAF9H,GAIGO,IAJH,CAIQ,SAACC,GAAD,CAAS,CACbL,SAAS,8BAAKD,MAAL,qBAAgBM,GAAG,CAACC,IAAJ,CAASC,OAAzB,GAAT,CACA;AACAL,UAAU,CAACG,GAAG,CAACC,IAAJ,CAASE,WAAT,CAAuBX,UAAxB,CAAV,CACD,CARH,EASGY,KATH,CASS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAXH,EAYA;AACD,CAdQ,CAcN,CAACb,UAAD,CAAaC,QAAb,CAdM,CAAT,CAgBA,MAAO,CAACC,MAAD,CAASE,OAAT,CAAP,CACD","sourcesContent":["//when we create a Hook, it usually starts with \"use\"\n//we don't read anything in Hook\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function usePhotoSearch(query, pageNumber, searchOn) {\n  const [photos, setPhotos] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n\n  //this useEffect function will reset the photos and delete the last search and start another one, otherwise it would add the phots from new search after the ones from the last research\n\n  useEffect(() => {\n    setPhotos([]);\n  }, [query]);\n  //useEffect is used to run a function just when a condition is attended\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.unsplash.com/search/collections/?client_id=j9bQjfT_YyUFBte48Ewb8Q58-tYlHNiThtbzHJ8Y6oE&query=${query}&page=${pageNumber}`\n      )\n      .then((res) => {\n        setPhotos([...photos, ...res.data.results]);\n        //if the condition inside of parentheses is true, it will change the value of hasMore to true\n        setHasMore(res.data.total_pages > pageNumber);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    //ehen the variable inde [] changes -> the function below will run\n  }, [pageNumber, searchOn]);\n\n  return [photos, hasMore];\n}\n"]},"metadata":{},"sourceType":"module"}