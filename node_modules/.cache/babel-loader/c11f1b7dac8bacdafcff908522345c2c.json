{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dci/Documents/React/PicPhotos/photos/src/components/Results.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback } from \"react\";\nimport EachPhoto from \"./EachPhoto\";\nexport default function Results(props) {\n  _s();\n\n  const {\n    photos,\n    hasMore,\n    setPageNumber\n  } = props; //when we rerender the component, everything change, but by using useRef(). This function return one object with property \"current\" with the value of null\n\n  const observer = useRef(); //the function inside callback function will happen just when the variable inside of [] changes. Really similar to useEffect BUT IS CONNECT WITH SOME VARIABLE AND STORED INSIDE OF IT.\n  //node refers to the <div> which was returned element\n\n  const lastPhotoElementRef = useCallback(node => {\n    if (observer.current) {\n      observer.current.disconnect();\n    }\n\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n\n    if (node) {\n      observer.current.observe(node);\n    }\n  }, [hasMore]);\n  let filteredPhotos = photos.filter(item => item.cover_photo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-columns\",\n    children: filteredPhotos.map((item, index) => {\n      if (item.cover_photo) {\n        if (index === filteredPhotos.length - 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: lastPhotoElementRef,\n            children: /*#__PURE__*/_jsxDEV(EachPhoto, {\n              photo: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(EachPhoto, {\n              photo: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this);\n        }\n      }\n\n      return null;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Results, \"fro6iX44f14tJ4NrtV4G30Rfw9Y=\");\n\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/home/dci/Documents/React/PicPhotos/photos/src/components/Results.jsx"],"names":["React","useRef","useCallback","EachPhoto","Results","props","photos","hasMore","setPageNumber","observer","lastPhotoElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","filteredPhotos","filter","item","cover_photo","map","index","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAAqCH,KAA3C,CADqC,CAErC;;AACA,QAAMI,QAAQ,GAAGR,MAAM,EAAvB,CAHqC,CAKrC;AACA;;AACA,QAAMS,mBAAmB,GAAGR,WAAW,CACpCS,IAAD,IAAU;AACR,QAAIF,QAAQ,CAACG,OAAb,EAAsB;AACpBH,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACD;;AACDJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAA0BC,OAAD,IAAa;AACvD,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BT,OAAjC,EAA0C;AACxCC,QAAAA,aAAa,CAAES,cAAD,IAAkBA,cAAc,GAAC,CAAlC,CAAb;AACD;AACF,KAJkB,CAAnB;;AAKA,QAAIN,IAAJ,EAAU;AACRF,MAAAA,QAAQ,CAACG,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACD;AACF,GAboC,EAcrC,CAACJ,OAAD,CAdqC,CAAvC;AAiBA,MAAIY,cAAc,GAAGb,MAAM,CAACc,MAAP,CAAeC,IAAD,IAASA,IAAI,CAACC,WAA5B,CAArB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cACGH,cAAc,CAACI,GAAf,CAAmB,CAACF,IAAD,EAAOG,KAAP,KAAiB;AACnC,UAAIH,IAAI,CAACC,WAAT,EAAsB;AACpB,YAAIE,KAAK,KAAKL,cAAc,CAACM,MAAf,GAAwB,CAAtC,EAAyC;AACvC,8BACE;AAAK,YAAA,GAAG,EAAEf,mBAAV;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAEW;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,aAAoCG,KAApC;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SAND,MAMO;AACL,8BACE;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,aAAWG,KAAX;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;AACF;;AACD,aAAO,IAAP;AACD,KAjBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAhDuBpB,O;;KAAAA,O","sourcesContent":["import React, { useRef, useCallback } from \"react\";\nimport EachPhoto from \"./EachPhoto\";\n\nexport default function Results(props) {\n  const { photos, hasMore, setPageNumber } = props;\n  //when we rerender the component, everything change, but by using useRef(). This function return one object with property \"current\" with the value of null\n  const observer = useRef();\n\n  //the function inside callback function will happen just when the variable inside of [] changes. Really similar to useEffect BUT IS CONNECT WITH SOME VARIABLE AND STORED INSIDE OF IT.\n  //node refers to the <div> which was returned element\n  const lastPhotoElementRef = useCallback(\n    (node) => {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          setPageNumber((prevPageNumber)=>prevPageNumber+1)\n        }\n      });\n      if (node) {\n        observer.current.observe(node);\n      }\n    },\n    [hasMore]\n  );\n\n  let filteredPhotos = photos.filter((item)=> item.cover_photo);\n\n  return (\n    <div className=\"card-columns\">\n      {filteredPhotos.map((item, index) => {\n        if (item.cover_photo) {\n          if (index === filteredPhotos.length - 1) {\n            return (\n              <div ref={lastPhotoElementRef} key={index}>\n                <EachPhoto photo={item} />\n              </div>\n            );\n          } else {\n            return (\n              <div  key={index}>\n                <EachPhoto photo={item} />\n              </div>\n            );\n          }\n        }\n        return null;\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}