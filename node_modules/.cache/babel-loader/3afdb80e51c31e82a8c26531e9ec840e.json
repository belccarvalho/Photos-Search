{"ast":null,"code":"var _s = $RefreshSig$();\n\n//when we create a Hook, it usually starts with \"use\"\n//we don't read anything in Hook\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function usePhotoSearch(query, pageNumber, searchOn) {\n  _s();\n\n  const [photos, setPhotos] = useState([]);\n  const [hasmore, setHasMore] = useState(false); //this useEffect function will reset the photos and delete the last search and start another one, otherwise it would add the phots from new search after the ones from the last research\n\n  useEffect(() => {\n    setPhotos([]);\n  }, [query]); //useEffect is used to run a function just when a condition is attended\n\n  useEffect(() => {\n    axios.get(`https://api.unsplash.com/search/collections/?client_id=j9bQjfT_YyUFBte48Ewb8Q58-tYlHNiThtbzHJ8Y6oE&query=${query}&page=${pageNumber}`).then(res => {\n      console.log(res.data.results);\n      setPhotos([...photos, ...res.data.results]);\n\n      if (res.data.total_pages > pageNumber) {\n        setHasMore(true);\n      }\n    }).catch(err => {\n      console.log(err);\n    }); //ehen the variable inde [] changes -> the function below will run\n  }, [pageNumber, searchOn]);\n  return [photos];\n}\n\n_s(usePhotoSearch, \"MxMJTcBwntVRf3rwSYMi5PcoQDA=\");","map":{"version":3,"sources":["/home/dci/Documents/React/PicPhotos/photos/src/components/usePhotoSearch.jsx"],"names":["React","useState","useEffect","axios","usePhotoSearch","query","pageNumber","searchOn","photos","setPhotos","hasmore","setHasMore","get","then","res","console","log","data","results","total_pages","catch","err"],"mappings":";;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqD;AAAA;;AAClE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC,CAFkE,CAIlE;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAFQ,EAEN,CAACJ,KAAD,CAFM,CAAT,CANkE,CASlE;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFS,GADH,CAEK,4GAA2GP,KAAM,SAAQC,UAAW,EAFzI,EAIGO,IAJH,CAISC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACAT,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY,GAAGM,GAAG,CAACG,IAAJ,CAASC,OAAxB,CAAD,CAAT;;AACA,UAAIJ,GAAG,CAACG,IAAJ,CAASE,WAAT,GAAuBb,UAA3B,EAAuC;AACrCK,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KAVH,EAWGS,KAXH,CAWUC,GAAD,IAAS;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,KAbH,EADc,CAed;AACD,GAhBQ,EAgBN,CAACf,UAAD,EAAaC,QAAb,CAhBM,CAAT;AAkBA,SAAO,CAACC,MAAD,CAAP;AACD;;GA7BuBJ,c","sourcesContent":["//when we create a Hook, it usually starts with \"use\"\n//we don't read anything in Hook\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function usePhotoSearch(query, pageNumber, searchOn) {\n  const [photos, setPhotos] = useState([]);\n  const [hasmore, setHasMore] = useState(false);\n\n  //this useEffect function will reset the photos and delete the last search and start another one, otherwise it would add the phots from new search after the ones from the last research\n\n  useEffect(() => {\n    setPhotos([]);\n  }, [query]);\n  //useEffect is used to run a function just when a condition is attended\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.unsplash.com/search/collections/?client_id=j9bQjfT_YyUFBte48Ewb8Q58-tYlHNiThtbzHJ8Y6oE&query=${query}&page=${pageNumber}`\n      )\n      .then((res) => {\n        console.log(res.data.results);\n        setPhotos([...photos, ...res.data.results]);\n        if (res.data.total_pages > pageNumber) {\n          setHasMore(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    //ehen the variable inde [] changes -> the function below will run\n  }, [pageNumber, searchOn]);\n\n  return [photos];\n}\n"]},"metadata":{},"sourceType":"module"}